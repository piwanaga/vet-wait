{"version":3,"sources":["Form.js","ClearButton.js","API.js","Queue.js","InstructionsModal.js","images/dog-logo.svg","images/cat-logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Form","addItem","INITIAL_STATE","firstName","lastName","petName","phone","firstNameError","lastNameError","petNameError","phoneError","useState","formData","setFormData","handleChange","evt","target","name","value","data","className","onSubmit","preventDefault","validForm","length","validateForm","htmlFor","type","id","maxLength","onChange","mask","maskChar","ClearButton","checkedIn","clearCheckedIn","clearItems","onClick","handleClick","BASE_URL","KEY","sendText","ownerName","a","phoneStripped","replace","console","log","axios","post","message","key","res","error","Queue","items","textSent","setTextSent","setCheckedIn","handleSendText","renderTextBtn","i","includes","disabled","xmlns","viewBox","fill","fillRule","d","clipRule","renderCheckInBtn","handleCheckIn","map","idx","InstructionsModal","isOpen","setIsOpen","closeModal","appear","show","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","App","setItems","src","dogLogo","alt","catLogo","item","newItem","uuid","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549eca64.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst Form = ({ addItem }) => {\r\n    const INITIAL_STATE = {\r\n        firstName: '',\r\n        lastName: '',\r\n        petName: '',\r\n        phone: '',\r\n        firstNameError: '',\r\n        lastNameError: '',\r\n        petNameError: '',\r\n        phoneError: ''\r\n    };\r\n\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n    const validateForm = () => {\r\n      let validForm = true\r\n      if (!formData.firstName) {\r\n        setFormData(data => ({\r\n          ...data, firstNameError: 'First name cannot be blank'\r\n        }))\r\n        validForm = false\r\n      } else {\r\n        setFormData(data => ({\r\n          ...data, firstNameError: ''\r\n        }))\r\n      }\r\n      if (!formData.lastName) {\r\n        setFormData(data => ({\r\n          ...data, lastNameError: 'Last name cannot be blank'\r\n        }))\r\n        validForm = false\r\n      } else {\r\n        setFormData(data => ({\r\n          ...data, lastNameError: ''\r\n        }))\r\n      }\r\n      if (!formData.petName) {\r\n        setFormData(data => ({\r\n          ...data, petNameError: 'Pet name cannot be blank'\r\n        }))\r\n        validForm = false\r\n      } else {\r\n        setFormData(data => ({\r\n          ...data, petNameError: ''\r\n        }))\r\n      }\r\n      if (!formData.phone) {\r\n        setFormData(data => ({\r\n          ...data, phoneError: 'Phone cannot be blank'\r\n        }))\r\n        validForm = false\r\n      } else if ( formData.phone.length !== 12) {\r\n        setFormData(data => ({\r\n          ...data, phoneError: 'Invalid phone number'\r\n        }))\r\n        validForm = false\r\n      } else {\r\n        setFormData(data => ({\r\n          ...data, phoneError: ''\r\n        }))\r\n      }\r\n      return validForm\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault()\r\n        let isValidForm = validateForm()\r\n        if (isValidForm) {\r\n          addItem(formData)\r\n          setFormData(INITIAL_STATE)\r\n        }\r\n    };\r\n\r\n    const handleChange = evt => {\r\n        const { name, value } = evt.target;\r\n        setFormData(data => ({\r\n          ...data,\r\n          [name]: value\r\n        }));\r\n      };\r\n\r\n    return (\r\n      <div className='py-8 px-10 shadow-lg rounded-lg bg-white'>\r\n        <form onSubmit={handleSubmit} className=''>\r\n          <div className='mb-3'>\r\n            <label htmlFor='first-name' className='block text-sm text-gray-700 mb-1'>First Name</label>\r\n            <input \r\n                type='text' \r\n                name='firstName' \r\n                id='firstName'\r\n                maxLength='25' \r\n                value={formData.firstName}\r\n                onChange={handleChange}\r\n                className='w-full border-gray-300 rounded-lg shadow-sm focus:border-green-400 focus:ring-green-500 focus:ring-opacity-50' />\r\n            {formData.firstNameError ? \r\n                <p className='text-xs text-red-500 mt-1'>{formData.firstNameError}</p> :\r\n                null\r\n            }\r\n          </div>\r\n          <div className='mb-3'>\r\n            <label htmlFor='last-name' className='block text-sm text-gray-700 mb-1'>Last Name</label>\r\n            <input \r\n                type='text' \r\n                name='lastName' \r\n                id='lastName'\r\n                maxLength='25' \r\n                value={formData.lastName}\r\n                onChange={handleChange}\r\n                className='w-full border-gray-300 rounded-lg shadow-sm focus:border-green-400 focus:ring-green-500 focus:ring-opacity-50' />\r\n            {formData.lastNameError ? \r\n                <p className='text-xs text-red-500 mt-1'>{formData.lastNameError}</p> :\r\n                null\r\n            }\r\n          </div>\r\n          <div className='mb-3'>\r\n            <label htmlFor='petName' className='block text-sm text-gray-700 mb-1'>Pet Name</label>\r\n            <input \r\n                type='text' \r\n                name='petName' \r\n                id='petName'\r\n                maxLength='25' \r\n                value={formData.petName}\r\n                onChange={handleChange}\r\n                className='w-full border-gray-300 rounded-lg shadow-sm focus:border-green-400 focus:ring-green-500 focus:ring-opacity-50' />\r\n            {formData.petNameError ? \r\n                <p className='text-xs text-red-500 mt-1'>{formData.petNameError}</p> :\r\n                null\r\n            }\r\n          </div>\r\n          <div className='mb-3'>\r\n            <label htmlFor='phone' className='block text-sm text-gray-700 mb-1'>Phone Number</label>\r\n            <InputMask\r\n                mask='999-999-9999' \r\n                maskChar=''\r\n                type='text' \r\n                name='phone' \r\n                id='phone'\r\n                value={formData.phone}\r\n                onChange={handleChange}\r\n                className='w-full border-gray-300 rounded-lg shadow-sm focus:border-green-400 focus:ring-green-500 focus:ring-opacity-50' />\r\n            {formData.phoneError ? \r\n                <p className='text-xs text-red-500 mt-1'>{formData.phoneError}</p> :\r\n                null\r\n            }\r\n          </div>\r\n          <div>\r\n            <button\r\n                className='text-md text-white uppercase tracking-wider bg-green-500 mt-4 py-3 rounded-lg w-full hover:bg-green-400 hover:-translate-y-0.5 focus:outline-none focus:ring focus:ring-offset-2 focus:ring-green-500 focus:ring-opacity-50 active:bg-green-600 transform transition' >\r\n                    Add to queue\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst ClearButton = ({ checkedIn, clearCheckedIn, clearItems }) => {\r\n    const handleClick = checkedIn => {\r\n        clearItems(checkedIn)\r\n        clearCheckedIn()\r\n    }\r\n    \r\n    return (\r\n        checkedIn.length ?\r\n            <button \r\n                className='tracking-wider mt-1 mb-4 py-2 px-3 rounded-lg w-50 text-white bg-red-500 hover:bg-red-400 hover:-translate-y-0.5 focus:outline-none focus:ring focus:ring-offset-2 focus:ring-red-500 focus:ring-opacity-50 active:bg-red-600 transform transition'\r\n                onClick={() => handleClick(checkedIn)}\r\n                >\r\n                Clear Checked In\r\n            </button> :\r\n            <button className='disabled text-gray-500 shadow tracking-wider mt-1 mb-4 py-2 px-3 rounded-lg w-50'>\r\n                Clear Checked In\r\n            </button>\r\n        \r\n    )\r\n}\r\n\r\nexport default ClearButton;","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://textbelt.com/text'\r\nconst KEY ='753f4a473e3773b284219c6a3c94828de43f199c8k3LNLnNfLQRsoes0stOdBGDn'\r\n\r\nconst sendText = async (phone, ownerName, petName) => {\r\n    const phoneStripped = phone.replace('-', '').replace('-', '')\r\n    try {\r\n        console.log('URL:', BASE_URL, 'KEY:', KEY, 'phone:', phone, 'stripped:', phoneStripped, 'owner:', ownerName, 'pet:', petName)\r\n        const res = await axios.post(BASE_URL, {\r\n            phone: phoneStripped,\r\n            message: `Hi ${ownerName}, ${petName} is ready to be checked in! Please come to the front desk in the next 10 muinutes to start your appointment. (This is a test message from VetWait)`,\r\n            key: KEY\r\n        });\r\n        return res\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n    \r\n}\r\n\r\nexport default sendText","import React, { useState } from 'react';\r\nimport ClearButton from './ClearButton';\r\nimport sendText from './API';\r\n\r\nconst Queue = ({ items, clearItems }) => {\r\n    const [textSent, setTextSent] = useState([])\r\n    const [checkedIn, setCheckedIn] = useState([])\r\n\r\n    const handleSendText = async (phone, ownerName, petName, id) => {\r\n        await sendText(phone, ownerName, petName)\r\n        setTextSent(textSent => [...textSent, id])\r\n    }\r\n\r\n    const handleCheckIn = id => {\r\n        setCheckedIn(checkedIn => [...checkedIn, id])\r\n    }\r\n\r\n    const clearCheckedIn = () => {\r\n        setCheckedIn([])\r\n    }\r\n\r\n    const renderTextBtn = i => {\r\n        return textSent.includes(i.id) ? \r\n            <button\r\n                disabled\r\n                className= 'disabled text-blue-400 text-xs tracking-wider bg-blue-200 bg-opacity-20 px-2 py-1 sm:ml-4 md:ml-8 rounded-lg focus:outline-none focus:ring focus:ring-offset-2 focus:ring-gray-200 focus:ring-opacity-50 transform transition' \r\n                > \r\n                text sent\r\n                <span> \r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline ml-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                </span>\r\n            </button> :\r\n            <button\r\n                className= 'text-white bg-blue-400 text-xs tracking-wider px-2 py-1 sm:ml-4 md:ml-8 rounded-lg border hover:bg-blue-300  focus:outline-none focus:ring focus:ring-offset-2 focus:ring-blue-400 focus:ring-opacity-50 active:bg-blue-500 transform transition'\r\n                onClick={() => handleSendText(i.phone, i.firstName, i.petName, i.id)}\r\n                > \r\n                Send Text\r\n            </button>\r\n        \r\n    }\r\n\r\n    const renderCheckInBtn = id => {\r\n        return checkedIn.includes(id) ? \r\n            <button\r\n                disabled\r\n                className= 'disabled text-green-500 text-xs tracking-wider bg-green-300 bg-opacity-20 px-2 py-1 rounded-lg focus:outline-none focus:ring focus:ring-offset-2 focus:ring-gray-200 focus:ring-opacity-50  transform transition' \r\n                > \r\n                checked in\r\n                <span> \r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline ml-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                </span>\r\n            </button> :\r\n            <button\r\n                className= 'text-white bg-green-400 text-xs tracking-wider bg-white px-2 py-1 rounded-lg border  hover:bg-green-300  focus:outline-none focus:ring focus:ring-offset-2 focus:ring-green-400 focus:ring-opacity-50 active:bg-green-500 transform transition'\r\n                onClick={() => handleCheckIn(id)}\r\n                > \r\n                Check In\r\n            </button>\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='flex justify-center'>\r\n            <ClearButton checkedIn={checkedIn} clearCheckedIn={clearCheckedIn} clearItems={clearItems} />\r\n        </div>\r\n        <div className='bg-white shadow-lg rounded-lg mb-20'>\r\n            <table className='table-fixed w-full border-collapse'>\r\n                <thead className='bg-gray-100'>\r\n                    <tr className='border-b'>\r\n                        <th className='hidden sm:table-cell w-12 md:w-20 lg:w-16 text-left text-sm sm:text-lg font-semibold px-4 py-4 tracking-wide text-gray-900'>Pos</th>\r\n                        <th className='w-20 text-left text-sm sm:text-lg font-semibold px-4 py-4 tracking-wide text-gray-900'>Owner</th>\r\n                        <th className='w-16 lg:w-20 text-left text-sm sm:text-lg font-semibold px-4 py-4 tracking-wide text-gray-900'>Pet</th>\r\n                        <th className='sm:w-36 md:w-40 lg:w-28 text-left text-sm sm:text-lg font-semibold px-4 py-4 tracking-wide text-gray-900'>Phone</th>\r\n                        <th className='sm:w-32 md:w-28 text-left text-sm sm:text-lg font-semibold px-4 py-4 tracking-wide text-gray-900'>\r\n                            Checked In\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {items.map((i, idx) => (\r\n                    <tr key={i.id} className='hover:bg-gray-50'>\r\n                        <td className='hidden sm:table-cell border px-3 py-3 text-gray-900 text-xs sm:text-sm'>{idx + 1}</td>\r\n                        <td className='border px-3 py-3 text-gray-900 text-xs sm:text-sm overflow-auto'>{i.firstName} {i.lastName}</td>\r\n                        <td className='border px-3 py-3 text-gray-900 text-xs sm:text-sm overflow-auto'>{i.petName}</td>\r\n                        <td className='border px-3 py-3 text-gray-900 text-xs sm:text-sm text-center sm:text-left'>\r\n                            {i.phone}   \r\n                            {renderTextBtn(i)}\r\n                        </td>\r\n                        <td className='border-b px-3 py-3'>\r\n                            <div className='flex justify-center items-center'>\r\n                            {renderCheckInBtn(i.id)}\r\n                            </div>\r\n                        </td>\r\n                    </tr> \r\n                ))}\r\n                </tbody>\r\n            </table>\r\n            {items.length ? null :\r\n            <div className='flex justify-center w-full px-3 py-5'>\r\n                <p className='text-gray-900 text-xl italic font-light'>Woof! No one is waiting.</p>\r\n            </div>\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Queue;","import { Dialog, Transition } from '@headlessui/react'\r\nimport { Fragment, useState } from 'react'\r\n\r\nconst InstructionsModal = () => {\r\n  let [isOpen, setIsOpen] = useState(false)\r\n\r\n  function closeModal() {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  function openModal() {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"inset-0 flex items-center justify-center\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={openModal}\r\n          className='mb-4 text-gray-500 text-sm tracking-wider hover:text-gray-400'\r\n        >\r\n          <div className='flex align-center'>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1 inline\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              Instructions\r\n          </div>\r\n        </button>\r\n      </div>\r\n\r\n      <Transition appear show={isOpen} as={Fragment}>\r\n        <Dialog\r\n          as=\"div\"\r\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n          onClose={closeModal}\r\n        >\r\n          <div className=\"min-h-screen px-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-0\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\r\n            </Transition.Child>\r\n\r\n            {/* This element is to trick the browser into centering the modal contents. */}\r\n            <span\r\n              className=\"inline-block h-screen align-middle\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-lg\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-xl font-medium mb-4 leading-6 text-gray-900\"\r\n                >\r\n                  VetWait Instructions\r\n                </Dialog.Title>\r\n                <div className=\"mt-2 space-y-2\">\r\n                  <p className=\"text-sm text-gray-500 \">\r\n                    1. Enter <span className='font-semibold'>Owner</span> and <span className='font-semibold'>Pet</span> names.\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-500 \">\r\n                    2. Enter your real <span className='font-semibold'>Phone Number</span> to get a text from VetWait!.\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-500 \">\r\n                    3. Click <span className='font-semibold'>'Send Text'</span> in the queue to get a text message.\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-500 \">\r\n                    4. Click <span className='font-semibold'>'Check In'</span> to check in pet.\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-500 \">\r\n                    5. Click <span className='font-semibold'>'Clear Checked In'</span> to remove checked in pets from the list.\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"mt-6\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"inline-flex justify-center px-4 py-2 text-sm text-white bg-blue-500 border border-transparent rounded hover:bg-blue-400 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\r\n                    onClick={closeModal}\r\n                  >\r\n                    Got it, thanks!\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default InstructionsModal;","export default __webpack_public_path__ + \"static/media/dog-logo.632b36d5.svg\";","export default __webpack_public_path__ + \"static/media/cat-logo.3a856b07.svg\";","import React, { useState } from 'react';\nimport Form from './Form';\nimport Queue from './Queue';\nimport InstructionsModal from './InstructionsModal';\nimport dogLogo from './images/dog-logo.svg'\nimport catLogo from './images/cat-logo.svg'\nimport { v4 as uuid } from \"uuid\";\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n\n  const addItem = item => {\n    const newItem = {...item, id: uuid()}\n    setItems(items => [...items, newItem])\n  };\n\n  const clearItems = checkedIn => {\n    setItems(items => items.filter(i => !checkedIn.includes(i.id)))\n  }\n\n  return (\n    <div className=\"w-full\">\n      <div className='max-w-md mx-auto'>\n        <div className='flex justify-between mt-8 mb-4'>\n          <img src={dogLogo} alt='dog-logo' className='w-10 ml-2'/>\n          <h1 className='inline text-5xl font-bold text-center'>Vet<span className='text-green-500'>Wait</span></h1>\n          <img src={catLogo} alt='cat-logo' className='w-10 mr-2'/>\n        </div>\n        <InstructionsModal />\n      </div>\n      <div className='mx-auto max-w-lg'>\n        <Form addItem={addItem}/>\n      </div>\n      <div className='my-10' />\n      <div className='mx-auto max-w-5xl'>\n        <Queue items={items} clearItems={clearItems}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}